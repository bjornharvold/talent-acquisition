<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!--
  ~ Copyright (c) 2009. All rights reserved. Bjorn Harvold.
  -->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.4" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <display-name>casino</display-name>
    <description>Roo generated casino application</description>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>tpi.root</param-value>
    </context-param>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:META-INF/spring/applicationContext*.xml</param-value>
    </context-param>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter>
        <filter-name>httpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>

    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <init-param>
            <param-name>logLevel</param-name>
            <param-value>INFO</param-value>
        </init-param>
        <init-param>
            <param-name>statusEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>statusEnabledOnHosts</param-name>
            <param-value>localhost</param-value>
        </init-param>
        <init-param>
            <param-name>statusPath</param-name>
            <param-value>/status</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>charsetFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>openSessionInViewFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>

    <!-- this is for page caching. leave disabled in dev -->
    <filter>
        <filter-name>CacheFilter</filter-name>
        <filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
        <init-param>
            <param-name>scope</param-name>
            <param-value>application</param-value>
        </init-param>
        <init-param>
            <param-name>expires</param-name>
            <param-value>time</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>charsetFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>httpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>openSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.js</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.png</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.gif</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.jpg</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.css</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.jspx</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.swf</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.swc</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CacheFilter</filter-name>
        <url-pattern>*.html</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!--
    <listener>
        <listener-class>org.apache.tiles.extras.complete.CompleteAutoloadTilesListener</listener-class>
    </listener>
    -->

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>flex.messaging.HttpFlexSession</listener-class>
    </listener>

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>flex</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>Kaptcha</servlet-name>
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    </servlet>

    <!-- Kaptcha configuration -->
    <!--

    Constant 	 Description 	 Default
kaptcha.border 	Border around kaptcha. Legal values are yes or no. 	yes
kaptcha.border.color 	Color of the border. Legal values are r,g,b (and optional alpha) or white,black,blue. 	black
kaptcha.border.thickness 	Thickness of the border around kaptcha. Legal values are > 0. 	1
kaptcha.image.width 	Width in pixels of the kaptcha image. 	200
kaptcha.image.height 	Height in pixels of the kaptcha image. 	50
kaptcha.producer.impl 	The image producer. 	com.google.code.kaptcha.impl.DefaultKaptcha
kaptcha.textproducer.impl 	The text producer. 	com.google.code.kaptcha.text.impl.DefaultTextCreator
kaptcha.textproducer.char.string 	The characters that will insert the kaptcha. 	abcde2345678gfynmnpwx
kaptcha.textproducer.char.length 	The number of characters to display. 	5
kaptcha.textproducer.font.names 	A list of comma separated font names. 	Arial, Courier
kaptcha.textproducer.font.size 	The size of the font to use. 	40px.
kaptcha.textproducer.font.color 	The color to use for the font. Legal values are r,g,b. 	black
kaptcha.noise.impl 	The noise producer. 	com.google.code.kaptcha.impl.DefaultNoise
kaptcha.noise.color 	The noise color. Legal values are r,g,b. 	black
kaptcha.obscurificator.impl 	The obscurificator implementation. 	com.google.code.kaptcha.impl.WaterRipple
kaptcha.background.impl 	The background implementation. 	com.google.code.kaptcha.impl.DefaultBackground
kaptcha.background.clear.from 	Starting background color. Legal values are r,g,b. 	light grey
kaptcha.background.clear.to 	Ending background color. Legal values are r,g,b. 	white
kaptcha.word.impl 	The word renderer implementation. 	com.google.code.kaptcha.text.impl.DefaultWordRenderer
kaptcha.session.key 	The value for the kaptcha is generated and is put into the HttpSession. This is the key value for that item in the session. 	KAPTCHA_SESSION_KEY
kaptcha.session.date 	The date the kaptcha is generated is put into the HttpSession. This is the key value for that item in the session. 	KAPTCHA_SESSION_DATE

    -->

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>flex</servlet-name>
        <url-pattern>/messagebroker/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Kaptcha</servlet-name>
        <url-pattern>/kaptcha.jpg</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>600</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/WEB-INF/jsp/error.jspx</location>
    </error-page>

    <error-page>
        <error-code>403</error-code>
        <location>/WEB-INF/jsp/404.jspx</location>
    </error-page>

    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/404.jspx</location>
    </error-page>
</web-app>
