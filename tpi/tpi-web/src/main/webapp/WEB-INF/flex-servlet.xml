<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2009. All rights reserved. Bjorn Harvold
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:flex="http://www.springframework.org/schema/flex"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/flex
       http://www.springframework.org/schema/flex/spring-flex-1.0.xsd">
    
    <!-- blaze ds integration -->
    <flex:message-broker services-config-path="/WEB-INF/flex/services-config.xml">
        <flex:exception-translator ref="exceptionTranslator"/>
        <flex:config-processor ref="configProcessor"/>
        <flex:message-interceptor ref="messageInterceptor"/>

        <flex:secured>
            <flex:secured-endpoint-path pattern="**/messagebroker/**" access="ROLE_USER"/>
        </flex:secured>

    </flex:message-broker>

    <!-- amf message destinations -->
    <flex:message-destination id="event-bus" />

    <!-- Dispatches requests mapped to a MessageBroker -->
    <bean class="org.springframework.flex.servlet.MessageBrokerHandlerAdapter"/>

    <bean id="configProcessor" class="com.tps.tpi.web.flex.FlexMessageBrokerConfigProcessor"/>

    <!-- Custom exception translator configured as a Spring bean -->
    <bean id="exceptionTranslator" class="com.tps.tpi.web.flex.FlexExceptionTranslator"/>

    <!-- interceptor for pre post handling of java serialized messages to flex client -->
    <bean id="messageInterceptor" class="com.tps.tpi.web.flex.FlexMessageInterceptor"/>

    <!-- export our services here or use @Remoting @RemotingInclude @RemotingExclude annotations-->
    <!--<flex:remoting-destination ref="dummyProfileService"/>-->
</beans>
