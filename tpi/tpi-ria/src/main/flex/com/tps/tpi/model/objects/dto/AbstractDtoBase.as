/**
 * Generated by Gas3 v2.0.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (AbstractDto.as).
 */

/*******
 * 
 * edited by DK
 * 
 * removed implements IExternalizable 
 * 
 ***********/
package com.tps.tpi.model.objects.dto {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;

    [Bindable]
    public class AbstractDtoBase {

        private var _createdDate:Date;
        private var _id:String;
        private var _lastUpdate:Date;
        private var _recordCreatorType:String;
        private var _recordStatusType:String;
        private var _version:Number;

        public function set createdDate(value:Date):void {
            _createdDate = value;
        }
        public function get createdDate():Date {
            return _createdDate;
        }

        public function set id(value:String):void {
            _id = value;
        }
        public function get id():String {
            return _id;
        }

        public function set lastUpdate(value:Date):void {
            _lastUpdate = value;
        }
        public function get lastUpdate():Date {
            return _lastUpdate;
        }

        public function set recordCreatorType(value:String):void {
            _recordCreatorType = value;
        }
        public function get recordCreatorType():String {
            return _recordCreatorType;
        }

        public function set recordStatusType(value:String):void {
            _recordStatusType = value;
        }
        public function get recordStatusType():String {
            return _recordStatusType;
        }

        public function set version(value:Number):void {
            _version = value;
        }
        public function get version():Number {
            return _version;
        }

        public function readExternal(input:IDataInput):void {
            _createdDate = input.readObject() as Date;
            _id = input.readObject() as String;
            _lastUpdate = input.readObject() as Date;
            _recordCreatorType = input.readObject() as String;
            _recordStatusType = input.readObject() as String;
            _version = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_createdDate);
            output.writeObject(_id);
            output.writeObject(_lastUpdate);
            output.writeObject(_recordCreatorType);
            output.writeObject(_recordStatusType);
            output.writeObject(_version);
        }
    }
}